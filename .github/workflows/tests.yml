name: CI

on:
  push:
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        shell: bash
        run: |
          set -euo pipefail
          python -m pip install --upgrade pip
          # Instala requirements si existen (root y/o backend)
          for f in requirements.txt backend/requirements.txt requirements-test.txt backend/requirements-test.txt; do
            if [ -f "$f" ]; then
              echo "Installing $f"
              pip install -r "$f"
            fi
          done
          # Red de seguridad por si algún requirements no se instaló
          pip install python-docx
          # Verificación explícita
          python -c "import pkgutil,sys; ok = pkgutil.find_loader('docx') is not None; print(f\"Has 'docx'?: {ok}\"); sys.exit(0 if ok else 1)"

      - name: Run tests
        env:
          # Si tu código vive en backend/src, esto evita problemas de imports
          PYTHONPATH: ${{ github.workspace }}/backend/src
        run: pytest -q
