# Crear gu√≠a de instalaci√≥n y primeros pasos para las librer√≠as m√°s importantes

instalacion_data = {
    'Libreria': [
        'python-docx',
        'openpyxl', 
        'pandas',
        'PyPDF2',
        'Pillow',
        'BeautifulSoup4',
        'xlsxwriter',
        'pdfplumber',
        'weasyprint',
        'docx2pdf'
    ],
    'Comando_Instalacion': [
        'pip install python-docx',
        'pip install openpyxl',
        'pip install pandas',
        'pip install PyPDF2',
        'pip install Pillow',
        'pip install beautifulsoup4',
        'pip install XlsxWriter',
        'pip install pdfplumber',
        'pip install weasyprint',
        'pip install docx2pdf'
    ],
    'Dependencias_Sistema': [
        'Ninguna',
        'Ninguna',
        'Ninguna (opcional: xlrd para XLS)',
        'Ninguna',
        'Ninguna (opcional: external libs para formatos especiales)',
        'Ninguna (recomendado: lxml, html5lib)',
        'Ninguna',
        'Ninguna',
        'Pango, GDK-PixBuf (Linux), Cairo',
        'Microsoft Word (Windows) o LibreOffice'
    ],
    'Ejemplo_Basico': [
        '''from docx import Document
doc = Document()
doc.add_heading('Mi Documento', 0)
doc.add_paragraph('Texto de ejemplo')
doc.save('documento.docx')''',
        
        '''from openpyxl import Workbook
wb = Workbook()
ws = wb.active
ws['A1'] = 'Hola'
ws['B1'] = 'Mundo'
wb.save('archivo.xlsx')''',
        
        '''import pandas as pd
df = pd.read_csv('datos.csv')
df_filtrado = df[df['columna'] > 100]
df_filtrado.to_excel('resultado.xlsx')''',
        
        '''import PyPDF2
with open('archivo.pdf', 'rb') as file:
    reader = PyPDF2.PdfReader(file)
    text = reader.pages[0].extract_text()
    print(text)''',
        
        '''from PIL import Image
img = Image.open('imagen.jpg')
img_resized = img.resize((300, 300))
img_resized.save('imagen_small.jpg')''',
        
        '''from bs4 import BeautifulSoup
import requests
response = requests.get('https://ejemplo.com')
soup = BeautifulSoup(response.content, 'html.parser')
titles = soup.find_all('h1')''',
        
        '''import xlsxwriter
workbook = xlsxwriter.Workbook('ejemplo.xlsx')
worksheet = workbook.add_worksheet()
worksheet.write('A1', 'Hola Excel')
workbook.close()''',
        
        '''import pdfplumber
with pdfplumber.open('archivo.pdf') as pdf:
    page = pdf.pages[0]
    text = page.extract_text()
    tables = page.extract_tables()''',
        
        '''import weasyprint
html = '<h1>T√≠tulo</h1><p>Contenido</p>'
weasyprint.HTML(string=html).write_pdf('output.pdf')''',
        
        '''from docx2pdf import convert
convert("input.docx", "output.pdf")
# O para m√∫ltiples archivos:
convert("carpeta_docx/")'''
    ],
    'Casos_Uso_Principal': [
        'Crear informes, facturas, cartas autom√°ticas',
        'Reportes de datos, dashboards Excel',
        'An√°lisis de datos, ETL, reporting',
        'Manipular PDFs existentes, extraer contenido',
        'Redimensionar im√°genes, cambiar formatos',
        'Web scraping, parsing HTML/XML',
        'Generar archivos Excel con formato',
        'Extraer tablas estructuradas de PDFs',
        'HTML/CSS complejos a PDF de calidad',
        'Conversi√≥n masiva Word a PDF'
    ],
    'Dificultad_Inicial': [
        'Muy F√°cil',
        'Muy F√°cil', 
        'F√°cil',
        'F√°cil',
        'Muy F√°cil',
        'F√°cil',
        'F√°cil',
        'Medio',
        'Medio',
        'Muy F√°cil'
    ]
}

df_install = pd.DataFrame(instalacion_data)

print("=" * 120)
print("GU√çA DE INSTALACI√ìN Y PRIMEROS PASOS - TOP 10 LIBRER√çAS OPEN SOURCE")
print("=" * 120)

for idx, row in df_install.iterrows():
    print(f"\n{'='*80}")
    print(f"üì¶ {row['Libreria'].upper()}")
    print(f"{'='*80}")
    print(f"üîß Instalaci√≥n: {row['Comando_Instalacion']}")
    print(f"‚öôÔ∏è  Dependencias: {row['Dependencias_Sistema']}")
    print(f"üéØ Caso de uso: {row['Casos_Uso_Principal']}")
    print(f"üìö Dificultad: {row['Dificultad_Inicial']}")
    print(f"\nüíª EJEMPLO B√ÅSICO:")
    print(f"{row['Ejemplo_Basico']}")
    print()

# Crear resumen final
print("=" * 120)
print("üìã RESUMEN EJECUTIVO")
print("=" * 120)

print(f"""
üöÄ RECOMENDACIONES POR CASO DE USO:

üìÑ Para documentos de oficina b√°sicos:
   ‚Ä¢ python-docx (Word) + openpyxl (Excel) - Dupla perfecta
   ‚Ä¢ Instalaci√≥n: pip install python-docx openpyxl

üìä Para an√°lisis de datos y reportes:
   ‚Ä¢ pandas - La herramienta m√°s potente y vers√°til
   ‚Ä¢ Instalaci√≥n: pip install pandas openpyxl xlsxwriter

üñºÔ∏è Para procesamiento de im√°genes:
   ‚Ä¢ Pillow - Est√°ndar de facto para Python
   ‚Ä¢ Instalaci√≥n: pip install Pillow

üìë Para trabajar con PDFs:
   ‚Ä¢ PyPDF2 (manipulaci√≥n) + pdfplumber (extracci√≥n)
   ‚Ä¢ Instalaci√≥n: pip install PyPDF2 pdfplumber

üåê Para contenido web:
   ‚Ä¢ BeautifulSoup4 + requests - Combinaci√≥n cl√°sica
   ‚Ä¢ Instalaci√≥n: pip install beautifulsoup4 requests

‚ö° INSTALACI√ìN COMPLETA RECOMENDADA:
pip install python-docx openpyxl pandas PyPDF2 Pillow beautifulsoup4 pdfplumber xlsxwriter requests

üéì CURVA DE APRENDIZAJE:
‚Ä¢ Muy F√°cil (1-2 horas): python-docx, openpyxl, Pillow, docx2pdf
‚Ä¢ F√°cil (1-2 d√≠as): pandas, PyPDF2, BeautifulSoup4, xlsxwriter  
‚Ä¢ Medio (1 semana): pdfplumber, weasyprint

üí° CONSEJOS PR√ÅCTICOS:
‚Ä¢ Siempre instalar en entornos virtuales (venv)
‚Ä¢ Usar requirements.txt para proyectos
‚Ä¢ Consultar documentaci√≥n oficial para funciones avanzadas
‚Ä¢ Probar con archivos peque√±os antes de procesar lotes grandes
""")

print("An√°lisis completado. ‚úÖ")